// <auto-generated />
using System;
using JasperGreen.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JasperGreen.Migrations
{
    [DbContext(typeof(JasperGreenContext))]
    [Migration("20221205181651_inital")]
    partial class inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JasperGreen.Models.Crew", b =>
                {
                    b.Property<int>("CrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CrewForeman")
                        .HasColumnType("int");

                    b.Property<int>("CrewMember1")
                        .HasColumnType("int");

                    b.Property<int>("CrewMember2")
                        .HasColumnType("int");

                    b.HasKey("CrewID");

                    b.HasIndex("CrewForeman");

                    b.HasIndex("CrewMember1");

                    b.HasIndex("CrewMember2");

                    b.ToTable("Crews");

                    b.HasData(
                        new
                        {
                            CrewID = 701,
                            CrewForeman = 501,
                            CrewMember1 = 506,
                            CrewMember2 = 507
                        },
                        new
                        {
                            CrewID = 702,
                            CrewForeman = 502,
                            CrewMember1 = 508,
                            CrewMember2 = 509
                        },
                        new
                        {
                            CrewID = 703,
                            CrewForeman = 503,
                            CrewMember1 = 510,
                            CrewMember2 = 511
                        },
                        new
                        {
                            CrewID = 704,
                            CrewForeman = 504,
                            CrewMember1 = 512,
                            CrewMember2 = 513
                        },
                        new
                        {
                            CrewID = 705,
                            CrewForeman = 505,
                            CrewMember1 = 514,
                            CrewMember2 = 515
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingZIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomerID");

                    b.HasIndex("StateID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 101,
                            BillingAddress = "616 Avengers St",
                            BillingCity = "College Station",
                            BillingZIP = "77840",
                            Name = "Steven Grant",
                            PhoneNumber = "979-777-1111",
                            StateID = "TX"
                        },
                        new
                        {
                            CustomerID = 102,
                            BillingAddress = "617 Avengers St",
                            BillingCity = "College Station",
                            BillingZIP = "77840",
                            Name = "Marc Spector",
                            PhoneNumber = "979-000-1212",
                            StateID = "TX"
                        },
                        new
                        {
                            CustomerID = 103,
                            BillingAddress = "120 Marvel Rd",
                            BillingCity = "College Station",
                            BillingZIP = "77843",
                            Name = "Kate Bishop",
                            PhoneNumber = "979-123-4567",
                            StateID = "TX"
                        },
                        new
                        {
                            CustomerID = 104,
                            BillingAddress = "124 Marvel Rd",
                            BillingCity = "College Station",
                            BillingZIP = "77843",
                            Name = "Carol Danvers",
                            PhoneNumber = "979-222-2222",
                            StateID = "TX"
                        },
                        new
                        {
                            CustomerID = 105,
                            BillingAddress = "111 Hero Ln",
                            BillingCity = "College Station",
                            BillingZIP = "77844",
                            Name = "James Rhodes",
                            PhoneNumber = "979-555-4444",
                            StateID = "TX"
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 501,
                            EmployeeFirstName = "Tony",
                            EmployeeLastName = "Stark",
                            HireDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.00m,
                            JobTitle = "Crew Foreman",
                            SSN = "111-00-2121"
                        },
                        new
                        {
                            EmployeeID = 502,
                            EmployeeFirstName = "Steve",
                            EmployeeLastName = "Rogers",
                            HireDate = new DateTime(2015, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.00m,
                            JobTitle = "Crew Foreman",
                            SSN = "400-00-1200"
                        },
                        new
                        {
                            EmployeeID = 503,
                            EmployeeFirstName = "Thor",
                            EmployeeLastName = "Odinson",
                            HireDate = new DateTime(2016, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.00m,
                            JobTitle = "Crew Foreman",
                            SSN = "110-11-8888"
                        },
                        new
                        {
                            EmployeeID = 504,
                            EmployeeFirstName = "Bruce",
                            EmployeeLastName = "Banner",
                            HireDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.00m,
                            JobTitle = "Crew Foreman",
                            SSN = "111-11-3333"
                        },
                        new
                        {
                            EmployeeID = 505,
                            EmployeeFirstName = "Natasha",
                            EmployeeLastName = "Romanoff",
                            HireDate = new DateTime(2016, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.00m,
                            JobTitle = "Crew Foreman",
                            SSN = "400-00-4444"
                        },
                        new
                        {
                            EmployeeID = 506,
                            EmployeeFirstName = "Clint",
                            EmployeeLastName = "Barton",
                            HireDate = new DateTime(2016, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "111-00-7777"
                        },
                        new
                        {
                            EmployeeID = 507,
                            EmployeeFirstName = "Nick",
                            EmployeeLastName = "Fury",
                            HireDate = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "110-22-9999"
                        },
                        new
                        {
                            EmployeeID = 508,
                            EmployeeFirstName = "Sam",
                            EmployeeLastName = "Wilson",
                            HireDate = new DateTime(2017, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "600-11-5555"
                        },
                        new
                        {
                            EmployeeID = 509,
                            EmployeeFirstName = "Bucky",
                            EmployeeLastName = "Barnes",
                            HireDate = new DateTime(2016, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "100-50-4200"
                        },
                        new
                        {
                            EmployeeID = 510,
                            EmployeeFirstName = "Loki",
                            EmployeeLastName = "Laufeyson",
                            HireDate = new DateTime(2017, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "250-50-2525"
                        },
                        new
                        {
                            EmployeeID = 511,
                            EmployeeFirstName = "Wanda",
                            EmployeeLastName = "Maximoff",
                            HireDate = new DateTime(2017, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "300-60-2222"
                        },
                        new
                        {
                            EmployeeID = 512,
                            EmployeeFirstName = "Peter",
                            EmployeeLastName = "Parker",
                            HireDate = new DateTime(2017, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "700-11-1111"
                        },
                        new
                        {
                            EmployeeID = 513,
                            EmployeeFirstName = "Stephen",
                            EmployeeLastName = "Strange",
                            HireDate = new DateTime(2017, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "300-11-0000"
                        },
                        new
                        {
                            EmployeeID = 514,
                            EmployeeFirstName = "Scott",
                            EmployeeLastName = "Lang",
                            HireDate = new DateTime(2017, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "111-00-1234"
                        },
                        new
                        {
                            EmployeeID = 515,
                            EmployeeFirstName = "Matt",
                            EmployeeLastName = "Murdock",
                            HireDate = new DateTime(2017, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 18.00m,
                            JobTitle = "Crew Member",
                            SSN = "250-00-5678"
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentID = 11101,
                            CustomerID = 101,
                            PaymentAmount = 200.00m,
                            PaymentDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11102,
                            CustomerID = 102,
                            PaymentAmount = 200.00m,
                            PaymentDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11103,
                            CustomerID = 103,
                            PaymentAmount = 300.00m,
                            PaymentDate = new DateTime(2022, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11104,
                            CustomerID = 104,
                            PaymentAmount = 300.00m,
                            PaymentDate = new DateTime(2022, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11105,
                            CustomerID = 102,
                            PaymentAmount = 300.00m,
                            PaymentDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11106,
                            CustomerID = 104,
                            PaymentAmount = 200.00m,
                            PaymentDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11107,
                            CustomerID = 105,
                            PaymentAmount = 400.00m,
                            PaymentDate = new DateTime(2022, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11108,
                            CustomerID = 105,
                            PaymentAmount = 300.00m,
                            PaymentDate = new DateTime(2022, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11109,
                            CustomerID = 102,
                            PaymentAmount = 200.00m,
                            PaymentDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 11110,
                            CustomerID = 103,
                            PaymentAmount = 500.00m,
                            PaymentDate = new DateTime(2022, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Property", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyZIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PropertyID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            PropertyID = 2001,
                            CustomerID = 101,
                            PropertyAddress = "616 Avengers St",
                            PropertyCity = "College Station",
                            PropertyState = "TX",
                            PropertyZIP = "77840",
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            PropertyID = 2002,
                            CustomerID = 102,
                            PropertyAddress = "617 Avengers St",
                            PropertyCity = "College Station",
                            PropertyState = "TX",
                            PropertyZIP = "77840",
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            PropertyID = 2003,
                            CustomerID = 103,
                            PropertyAddress = "120 Marvel Rd",
                            PropertyCity = "College Station",
                            PropertyState = "TX",
                            PropertyZIP = "77843",
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            PropertyID = 2004,
                            CustomerID = 104,
                            PropertyAddress = "124 Marvel Rd",
                            PropertyCity = "College Station",
                            PropertyState = "TX",
                            PropertyZIP = "77843",
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            PropertyID = 2005,
                            CustomerID = 105,
                            PropertyAddress = "111 Hero Ln",
                            PropertyCity = "College Station",
                            PropertyState = "TX",
                            PropertyZIP = "77844",
                            ServiceFee = 400.00m
                        },
                        new
                        {
                            PropertyID = 2006,
                            CustomerID = 102,
                            PropertyAddress = "200 Moon St",
                            PropertyCity = "Bryan",
                            PropertyState = "TX",
                            PropertyZIP = "77801",
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            PropertyID = 2007,
                            CustomerID = 102,
                            PropertyAddress = "448 Knight St",
                            PropertyCity = "College Station",
                            PropertyState = "TX",
                            PropertyZIP = "77842",
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            PropertyID = 2008,
                            CustomerID = 103,
                            PropertyAddress = "300 Arrow St",
                            PropertyCity = "College Station",
                            PropertyState = "TX",
                            PropertyZIP = "77841",
                            ServiceFee = 500.00m
                        },
                        new
                        {
                            PropertyID = 2009,
                            CustomerID = 104,
                            PropertyAddress = "380 Cap Dr",
                            PropertyCity = "Bryan",
                            PropertyState = "TX",
                            PropertyZIP = "77806",
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            PropertyID = 20010,
                            CustomerID = 105,
                            PropertyAddress = "888 Armor St",
                            PropertyCity = "Bryan",
                            PropertyState = "TX",
                            PropertyZIP = "77806",
                            ServiceFee = 300.00m
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.ProvidedService", b =>
                {
                    b.Property<int>("ProvidedServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CrewID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ServiceFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProvidedServiceID");

                    b.HasIndex("CrewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PaymentID");

                    b.HasIndex("PropertyID");

                    b.ToTable("ProvidedServices");

                    b.HasData(
                        new
                        {
                            ProvidedServiceID = 4001,
                            CrewID = 701,
                            CustomerID = 101,
                            PropertyID = 2001,
                            ServiceDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4002,
                            CrewID = 701,
                            CustomerID = 102,
                            PropertyID = 2002,
                            ServiceDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4003,
                            CrewID = 702,
                            CustomerID = 103,
                            PropertyID = 2003,
                            ServiceDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4004,
                            CrewID = 702,
                            CustomerID = 104,
                            PropertyID = 2004,
                            ServiceDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4005,
                            CrewID = 703,
                            CustomerID = 102,
                            PropertyID = 2006,
                            ServiceDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4006,
                            CrewID = 703,
                            CustomerID = 104,
                            PropertyID = 2009,
                            ServiceDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4007,
                            CrewID = 704,
                            CustomerID = 105,
                            PropertyID = 2005,
                            ServiceDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 400.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4008,
                            CrewID = 704,
                            CustomerID = 105,
                            PropertyID = 20010,
                            ServiceDate = new DateTime(2022, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4009,
                            CrewID = 705,
                            CustomerID = 102,
                            PropertyID = 2007,
                            ServiceDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 200.00m
                        },
                        new
                        {
                            ProvidedServiceID = 4010,
                            CrewID = 705,
                            CustomerID = 103,
                            PropertyID = 2008,
                            ServiceDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 500.00m
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.State", b =>
                {
                    b.Property<string>("StateID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateID");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateID = "AL",
                            Name = "Alabama"
                        },
                        new
                        {
                            StateID = "AK",
                            Name = "Alaska"
                        },
                        new
                        {
                            StateID = "AZ",
                            Name = "Arizona"
                        },
                        new
                        {
                            StateID = "AR",
                            Name = "Arkansas"
                        },
                        new
                        {
                            StateID = "CA",
                            Name = "California"
                        },
                        new
                        {
                            StateID = "CO",
                            Name = "Colorado"
                        },
                        new
                        {
                            StateID = "CT",
                            Name = "Connecticut"
                        },
                        new
                        {
                            StateID = "DE",
                            Name = "Delaware"
                        },
                        new
                        {
                            StateID = "DC",
                            Name = "District of Columbia"
                        },
                        new
                        {
                            StateID = "FL",
                            Name = "Florida"
                        },
                        new
                        {
                            StateID = "GA",
                            Name = "Georgia"
                        },
                        new
                        {
                            StateID = "HI",
                            Name = "Hawaii"
                        },
                        new
                        {
                            StateID = "ID",
                            Name = "Idaho"
                        },
                        new
                        {
                            StateID = "IL",
                            Name = "Illinois"
                        },
                        new
                        {
                            StateID = "IN",
                            Name = "Indiana"
                        },
                        new
                        {
                            StateID = "IA",
                            Name = "Iowa"
                        },
                        new
                        {
                            StateID = "KS",
                            Name = "Kansas"
                        },
                        new
                        {
                            StateID = "KY",
                            Name = "Kentucky"
                        },
                        new
                        {
                            StateID = "LA",
                            Name = "Louisiana"
                        },
                        new
                        {
                            StateID = "ME",
                            Name = "Maine"
                        },
                        new
                        {
                            StateID = "MD",
                            Name = "Maryland"
                        },
                        new
                        {
                            StateID = "MA",
                            Name = "Massachusetts"
                        },
                        new
                        {
                            StateID = "MI",
                            Name = "Michigan"
                        },
                        new
                        {
                            StateID = "MN",
                            Name = "Minnesota"
                        },
                        new
                        {
                            StateID = "MS",
                            Name = "Mississippi"
                        },
                        new
                        {
                            StateID = "MO",
                            Name = "Missouri"
                        },
                        new
                        {
                            StateID = "MT",
                            Name = "Montana"
                        },
                        new
                        {
                            StateID = "NE",
                            Name = "Nebraska"
                        },
                        new
                        {
                            StateID = "NV",
                            Name = "Nevada"
                        },
                        new
                        {
                            StateID = "NH",
                            Name = "New Hampshire"
                        },
                        new
                        {
                            StateID = "NJ",
                            Name = "New Jersey"
                        },
                        new
                        {
                            StateID = "NM",
                            Name = "New Mexico"
                        },
                        new
                        {
                            StateID = "NY",
                            Name = "New York"
                        },
                        new
                        {
                            StateID = "NC",
                            Name = "North Carolina"
                        },
                        new
                        {
                            StateID = "ND",
                            Name = "North Dakota"
                        },
                        new
                        {
                            StateID = "OH",
                            Name = "Ohio"
                        },
                        new
                        {
                            StateID = "OK",
                            Name = "Oklahoma"
                        },
                        new
                        {
                            StateID = "OR",
                            Name = "Oregon"
                        },
                        new
                        {
                            StateID = "PA",
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            StateID = "RI",
                            Name = "Rhode Island"
                        },
                        new
                        {
                            StateID = "SC",
                            Name = "South Carolina"
                        },
                        new
                        {
                            StateID = "SD",
                            Name = "South Dakota"
                        },
                        new
                        {
                            StateID = "TN",
                            Name = "Tennessee"
                        },
                        new
                        {
                            StateID = "TX",
                            Name = "Texas"
                        },
                        new
                        {
                            StateID = "UT",
                            Name = "Utah"
                        },
                        new
                        {
                            StateID = "VT",
                            Name = "Vermont"
                        },
                        new
                        {
                            StateID = "VA",
                            Name = "Virginia"
                        },
                        new
                        {
                            StateID = "WA",
                            Name = "Washington"
                        },
                        new
                        {
                            StateID = "WV",
                            Name = "West Virginia"
                        },
                        new
                        {
                            StateID = "WI",
                            Name = "Wisconsin"
                        },
                        new
                        {
                            StateID = "WY",
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Crew", b =>
                {
                    b.HasOne("JasperGreen.Models.Employee", "EmpForeman")
                        .WithMany("Crews")
                        .HasForeignKey("CrewForeman")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Employee", "EmpMember1")
                        .WithMany("Member1")
                        .HasForeignKey("CrewMember1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Employee", "EmpMember2")
                        .WithMany("Member2")
                        .HasForeignKey("CrewMember2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("JasperGreen.Models.Customer", b =>
                {
                    b.HasOne("JasperGreen.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JasperGreen.Models.Payment", b =>
                {
                    b.HasOne("JasperGreen.Models.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("JasperGreen.Models.Property", b =>
                {
                    b.HasOne("JasperGreen.Models.Customer", "Customer")
                        .WithMany("Properties")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("JasperGreen.Models.ProvidedService", b =>
                {
                    b.HasOne("JasperGreen.Models.Crew", "Crew")
                        .WithMany("ProvidedServices")
                        .HasForeignKey("CrewID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Customer", "Customer")
                        .WithMany("ProvidedServices")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Payment", null)
                        .WithMany("ProvidedServices")
                        .HasForeignKey("PaymentID");

                    b.HasOne("JasperGreen.Models.Property", "Property")
                        .WithMany("ProvidedServices")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
